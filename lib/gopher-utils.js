/**
    DO NOT EDIT THIS FILE
    General Gopher Utilities. This file should not require modification. 
 */

const debug = require("debug")("gopher-app:utils");
const Gopher = require("gopherhq");
const fs = require("fs");
const path = require("path");
const config = require("./config");
const gopherClient = new Gopher(config);
const bodyParser = require("body-parser");
const _ = require("lodash");
const assert = require("assert");

const WEBHOOK_PATH = "/webhooks";

module.exports = {
  /**
   * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   *         Webhook-Related Middleware
   *      Ex: Responding to Webhook events
   * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   */

  /**
   * Is the current request a webhook?
   */
  isWebhook: function(request, response, next) {
    if (request.path !== WEBHOOK_PATH) {
      response.locals.gopher.isWebhook = false;
      next("route"); // Bypasses other middlware in 'use' function
    } else {
      response.locals.gopher.isWebhook = true;
      next();
    }
  },

  /**
   * Is the current request NOT a webhook?
   * TODO: There has to be a better way...
   */
  notWebhook: function(request, response, next) {
    return request.path !== WEBHOOK_PATH ? next() : next("route");
  },

  validateWebhook: function(req, res, next) {
    const validateTimestamp = true;
    debug(
      req.headers["x-gopher-signature"],
      req.headers["x-gopher-timestamp"],
      req.rawBody
    );
    assert(
      req.headers["x-gopher-signature"],
      "Webhook validation requires a signature"
    );
    assert(
      req.headers["x-gopher-timestamp"],
      "Webhook validation requires a timestamp"
    );
    assert(req.rawBody, "Webhook validation requires the full text body");

    if (
      gopherClient.validateWebhook(
        req.headers["x-gopher-signature"],
        req.headers["x-gopher-timestamp"],
        req.rawBody,
        validateTimestamp
      )
    ) {
      debug("Webhook validated!");
      return next();
    } else {
      console.log("Webhook validation failed");
      return next("Webhook validation failed");
    }
  },

  /**
   * Extract the raw request body. Necessary for webhook signature validation.
   */
  rawBody: bodyParser.json({
    verify: function(req, res, buf, encoding) {
      req.rawBody = buf.toString();
    }
  }),

  /**
   * Sets an authenticated insteance of Gopher API client
   * https://github.com/gopherhq/gopherhq-js for use in events
   * and middleware under gopher.api
   */
  setApiClientFromWebhook(req, res, next) {
    const accessToken =
      _.get(req, "extension.private_data.fut_access_token") ||
      _.get(req, "extension.public_data.fut_access_token");
    if (accessToken) {
      gopherClient.setAccessToken(accessToken);
      if (!res.locals.gopher) res.locals.gopher = {};
      res.locals.gopher.api = gopherClient;
      debug(`The Gopher API client is authenticated and at your service, available under
       res.locals.gopher.apiClient. See https://github.com/gopherhq/gopherhq-js for docs.`);
    } else {
      debug(`You can successfully send and process webhooks. The user has not yet 
      authenticated their extension, so API calls cannot be made.`);
    }
    next();
  }
};
